unit JobUaUnit;

interface
uses Classes, SysUtils, ValueListUnit;

  function DeclWord(AWord, Sex: string; var IsJob: byte; Pages: byte = 2;
    Country: string = 'UA'; FIO: string = ''; PartOfSpeech: string = '';
    ExceptName: string = '—клонение»сключени€'): string;

  function WordToList(Value : String): TValueList;

  function ToJob(Job, Dept, Sex: String; Pages: Byte = 2; Country: String = 'UA'): String;

  procedure LoadExceptList;

implementation

uses Math, IniFiles, Forms, ExceptionUnit;

function declGlasnay(C : string; Country: string = 'UA'): Byte;
begin
  Result := ord(not ((Length(C) = 0) or (Pos(C, 'аеЄиоуэыю€≥њЇ''`"') = 0)));
end;

// ¬озвращает гласные в конце слова,
// »змен€ет —ловоЅезќкончани€
function declWordEnds(tWord: string; var eWord: string; Country: string = 'UA'): String;
var
  n: Integer;
  k: Integer;
  c: String;
begin
	Result := '';
	n := Length(tWord);
	For k := -n to -1 do
  begin
		c := Copy(tWord, -k, 1);
		If declGlasnay(c, Country) = 1 then begin
			Result := c + Result;
		end else begin
      Break;
		end;
	end;
	eWord := Copy(tWord, 1, Length(tWord) - Length(Result));
end;

function declReturnReg(rWord, oWord: string): string;
begin
	//ѕоз = Ќайти(»сх—лово, '.');
	//If ѕоз > 0 then begin
	//	вр»сх—лово = »сх—лово;
	//	вр–ез—лово = –ез—лово;
	//	вр—лово = '';
	//	ѕоз = Ќайти(вр»сх—лово, '.');
	//	While (ѕоз > 0) and (ѕоз <= —трƒлина(вр–ез—лово)) and (ѕоз <= —трƒлина(вр»сх—лово)) do begin
	//		Ѕукваѕосле“очки»сх = —ред(вр»сх—лово, ѕоз+1, 1);
	//		Ѕукваѕосле“очки–ез = —ред(вр–ез—лово, ѕоз+1, 1);
	//		If (Ќрег(Ѕукваѕосле“очки»сх) = Ќрег(Ѕукваѕосле“очки–ез)) then begin
	//			вр—лово = вр—лово + Ћев(вр–ез—лово, ѕоз) + Ѕукваѕосле“очки»сх;
	//		end else begin
	//			вр—лово = вр—лово + Ћев(вр–ез—лово, ѕоз) + Ѕукваѕосле“очки–ез;
	//		end;
	//		вр–ез—лово = —ред(вр–ез—лово, ѕоз + 2);
	//		вр»сх—лово = —ред(вр»сх—лово, ѕоз + 2);
	//		ѕоз = Ќайти(вр»сх—лово, '.');
	//	end;
	//	–ез—лово = вр—лово + вр–ез—лово;
	//end;
	If oWord = AnsiUpperCase(oWord) then begin
		Result := AnsiUpperCase(rWord);
		//If —трƒлина(–ез—лово) > —трƒлина(oWord) then begin
		//¬озврат(¬рег(Ћев(–ез—лово, —трƒлина(oWord)))+—ред(–ез—лово, —трƒлина(oWord) + 1)); // For поддержки аббревиатур
	end else if AnsiUpperCase(Copy(oWord, 1, 1)) = Copy(oWord, 1, 1) then begin
		Result := AnsiUpperCase(Copy(rWord,1, 1)) + Copy(rWord, 2, Length(rWord));
	end else begin
		Result := rWord;
	end;
end;

function declShupashay(Sym, Country: string): Byte;
begin
  Result := ord(not ((Length(Sym) = 0) or (Pos(Sym, 'жшчщ') = 0)));
end;

// ¬ украњнськ≥й мов≥ м'€кими не можуть бути губн≥ м, в, б, п, ф,
// шипл€ч≥ ж, дж, ш, ч (пом'€кшуютьс€ лише подовжен≥ шипл€ч≥:
// затишш€, роздор≥жж€, р≥ччю), задньоротов≥ і, г, к, х
//
function declMagkay(tWord, nSymbol, pSymbol, Country: string): Byte;
begin
	Result := 0;
	If pSymbol = '' then begin
		If nSymbol <> 'ь' then begin
      Exit;
    end;
  end;
	If declGlasnay(tWord, Country) = 1 then begin
		//
	end else if (Length(tWord) > 0) and (Pos(tWord, 'мвбпф') > 0) then begin // губные
		//
	end else if (Length(tWord) > 0) and (Pos(tWord, 'ігкх') > 0) then begin  // глухие
		//
	end else if declShupashay(tWord, Country) = 1 then begin

		Result := ord(tWord = pSymbol);
	end else if (Length(nSymbol) > 0) and (Pos(nSymbol, '€юЇ≥њь') > 0) then begin
		Result := 1;
	end else if tWord = 'ь' then begin
		Result := declMagkay(pSymbol, tWord, '', Country);
	//end else if (tWord = 'й') and (—трƒлина(pSymbol) > 0) and (Ќайти('€юЇ≥њь', pSymbol) > 0) then begin
	end else if (tWord = 'й')
  and (Length(pSymbol) > 0)
  and (declGlasnay(pSymbol, Country) = 1) then begin
		// Ќет в правилах... проверить... пример —ерг≥й (2-а€ группа, ћ€гка€)
		// ѕример “алалай
		Result := 1;
	end;
end;

var
  ExceptList : TValueList;

function declGetGroupAndTyp(tWord: string; var tGroup: integer; var tTyp: string; tEnds: string; nEnds: integer; lSymEnds, eCoglOsnov, tRod, Counrty: string): Byte;
var
  fSymEnds,
  pSymOsnov,
  pSymEnds: string;
  pMagkay,
  pTverday,
  pShipashay: Byte;
begin
	//Result := 0;

	tGroup := 0;
	If nEnds > 0 then begin
		If ((tRod = 'м') or (tRod = 'ж'))
		and ((lSymEnds = 'а')
		or (lSymEnds = '€')) then begin
			// «десь может быть 4-а€ группа For среднего рода, определить можно только склонением.
			// and 2-а€ группа среднего рода, определить как неизвестно...
			tGroup := 1;
		end else if (tRod = 'м')
		and (lSymEnds = 'о') then begin
			tGroup := 2;
		end else if (tRod = 'с')
		and (lSymEnds <> '')
		and (Pos(lSymEnds, 'ое€') > 0) then begin
			tGroup := 2;
		end else begin
			//If 2 = 1 then begin
			//	—ообщить(
      raise Exception.Create( 'Ќеопределена группа, род: '+tRod+' окончание: -'+lSymEnds+'! '+tWord+ '!');
			//end;
			//Exit;
		end;
	end else begin
		If (tRod = 'м') or (tRod = 'с') then begin
			tGroup := 2;
		end else if (tRod = 'ж') then begin
			tGroup := 3;
		end else begin
			//If ¬ыводитьЌеопределенности = 1 then begin
		  //		—ообщить(
      raise Exception.Create('Ќеопределена группа, род: '+tRod+' без окончани€! '+tWord+'!');
			//end;
			//Exit;
		end;
	end;

	fSymEnds := Copy(tEnds, 1, 1);
	pSymOsnov := '';
	If Length(tWord) - nEnds > 1 then begin
		pSymOsnov := Copy(tWord, Length(tWord) - nEnds - 1, 1);
	end;

	// ѕоследн€€ согласна€ основы
	pSymEnds := '';
	If (nEnds > 1) then begin
		pSymEnds := Copy(tEnds, Length(tEnds) - 1, 1);
	end;

	If (nEnds > 1)
	and (declGlasnay(pSymEnds, Counrty) = 1)
	and (Pos(lSymEnds, '≥€Їюњ') > 0)
	then begin
		pMagkay := 1;
	end else begin
		pMagkay := declMagkay(eCoglOsnov, fSymEnds, pSymOsnov, Counrty);
	end;
	pTverday := 1 - pMagkay;
	pShipashay := declShupashay(eCoglOsnov, Counrty);

	If tGroup = 1 then begin
		If (pTverday = 1) and (pShipashay = 0) then begin
			tTyp := '“';
		end else if (pTverday = 1) and (pShipashay = 1) then begin
			tTyp := '—';
		end else if (pMagkay = 1) then begin
			tTyp := 'ћ';
		end;
	end else if tGroup = 2 then begin
		If (eCoglOsnov = 'р')
		and (declGlasnay(pSymOsnov, Counrty) = 1) then begin
			// “ут тип определить сложно, так как нужно сначала просклон€ть...
			// ј так как вызов идет из функции склонени€ For осуществлени€ склонени€
			// то цепочка бесконечна...
		  If (ExceptList.GetValueByKey('ћ€гка€–') is TValueList)
			and (TValueList(ExceptList.GetValueByKey('ћ€гка€–')).FindKey(tWord) > 0) then begin
			//Ќайти('≥гор лазар секретар ', tWord+' ') > 0 then begin
				// ≤гор - ≤горем, ™гор
				tTyp := 'ћ';
			end else begin
				tTyp := '“';
			end;
		end else if (pTverday = 1) and (pShipashay = 0) then begin
			If eCoglOsnov = 'ь' then begin
				tTyp := '—';
			end else begin
				tTyp := '“';
			end;
		end else if (tRod = 'м') and (pMagkay = 1) then begin
			tTyp := 'ћ';
		end else if (tRod = 'с') and (tEnds = 'е') and (pShipashay = 0) then begin
			tTyp := 'ћ';
		end else if (tRod = 'с') and (lSymEnds = '€') then begin
			tTyp := 'ћ';
		end else if (Pos(tRod, 'мс') > 0) and (pShipashay = 1) then begin
			tTyp := '—';
		end;
	end else if tGroup = 3 then begin
		tTyp := '-';
		If (pMagkay = 1) or (pShipashay = 1) then begin
			tTyp := 'ћ';
		end else if (pTverday = 1) and (pShipashay = 0) then begin
			tTyp := '“';
		end;
	end;

	If tTyp = '' then begin
		//If ¬ыводитьЌеопределенности = 1 then begin
			//—ообщить
    raise Exception.Create('Ќеопределен тип, род: '+tRod+', группа: '+IntToStr(tGroup)+'! '+tWord+ '!');
		//end;
   // Exit;
	end;

  Result := ord((tGroup > 0) and (tTyp <> ''));
end;


function DeclWord(AWord, Sex: string; var IsJob: byte; Pages: byte = 2;
  Country: string = 'UA'; FIO: string = ''; PartOfSpeech: string = '';
  ExceptName: string = '—клонение»сключени€'): string;
const
	EnSymbol = 'iIoOpPmnBMCcXaAHKeETy*`"';
	UaSymbol  = '≥≤оќр–тп¬ћ—с’ајЌ е≈“у''''''';
var
  tWord,
  kWord,
  rWord,
  zWord,
  eWord,
  bWord,
  hWord,
  eWord1,
  eWord2,
  fcWord1,
	wfcWord,
  fWord2,
  fWord_2,
  eWord_u: String;
  nWord,
  neWord: Integer;
  k: Integer;
  pSub,
  pSep,
	pDef,
  npDef,
	pSpace,
  pPoint: Integer;
  fNumberBeforeDef,
  fIskBeforeDef,
  fNotDec,
  fPrilag,
  //fCyshestv,
  fAddZvuch,
  fAddZvuch_b: Byte;
  fGroup: Integer;
	fTip: String;

  f3EndSFioPril,
  f2EndSFioPril: string;

begin
  Result := '';
	tWord := Trim(AWord);

  if tWord = '' then
  begin
		Result := tWord;
    Exit;
  end;

	//  орректируем i, I, o, O, p, P, m, n, B, M, C, c, X, a, H, K, e, E, T, y, and апостроф
	kWord := '';
	nWord := Length(tWord);
	For k := 1 to nWord do begin
		bWord := Copy(tWord, k, 1);
		pSub := Pos(bWord, EnSymbol);
		If pSub > 0 then begin
			kWord := kWord + Copy(UaSymbol, pSub, 1);
		end else begin
			kWord := kWord + bWord;
		end;
	end;
	tWord := kWord;

	If Length(tWord) = 1 then begin
		// tWord из одной буквы
		IsJob := 1;
    Result := tWord;
    Exit;
	end;

	If AWord = AnsiUpperCase(AWord) then begin
		//  апитализированное, считаем, что аббревиатура
		IsJob := 1;
    Result := tWord;
    Exit;
	end;

  // ¬озвращаем tWord с откорректированными символами и то хлеб
  // особенно дл€ именительного падежа
	If (Pages = 1) then begin
		Result := tWord;
    Exit;
	end;

  if Assigned(ExceptionUnit.SimpleExceptList) then
  begin
    if ExceptionUnit.SimpleExceptList.CheckWord(tWord, 2, Pages) then
    begin
      Result := ExceptionUnit.SimpleExceptList.Strings[Pages-1];
      Exit;
    end;
  end;

	//pSep := 0;
	pDef := Pos('-',tWord);
	pSpace := Pos(' ', tWord);

	// „исла, т.е. возможно числительные вида 1-а, 2-а, 3-€
	fNumberBeforeDef := 0;
	If pDef > 0 then begin
		hWord := Trim(Copy(tWord, 1, pDef - 1));
		If (Length(hWord) > 0 )
		and (hWord = IntToStr(StrToIntDef(hWord,0))) then begin
			fNumberBeforeDef := 1;
			npDef := Pos('-', Copy(tWord, pDef + 1, Length(tWord)));
			If npDef > 0 then begin
				pDef := pDef + npDef;
			end else begin
				pDef := 0;
			end;
		end;
	end;

	If FIO = 'ƒ' then begin
		// —оставные:
		//   заступник начальника управл≥нн€ - начальник в≥дд≥лу
		//   заступнику начальника управл≥нн€ - начальнику в≥дд≥лу
		// склон€етс€ только первое tWord, а If есть дефисы, то and первое после каждого дефиса
		// но головному бухгалтеру, пров≥дному спец≥ал≥сту
		//   прилагательные перед первым существительным также склон€ютс€
		// дефис раздел€ет составные слова

		pSep := pDef;
		If IsJob = 0 then begin
			If pSpace <> 0 then begin
				If pSep = 0 then begin
					pSep := pSpace;
				end else begin
					pSep := Min(pSep, pSpace);
				end;
			end;
		end;
		If (pSep > 0) then begin
			// –екурсивный вызов склонени€ If есть '-' or ' '
			fIskBeforeDef := 0;
			If pSep = pDef then begin
				//—ообщить('ѕеред дефисом: '+Ќрег(Ћев(tWord, pSep - 1)));
			  If (ExceptList.GetValueByKey('Ќе—клон€етс€ѕередƒефисом') is TValueList)
				and (TValueList( ExceptList.GetValueByKey('Ќе—клон€етс€ѕередƒефисом')).FindKey(AnsiLowerCase(Copy(tWord,1,pSep - 1))) > 0) then
        begin
					//—ообщить('Ќе склон€етс€');
					fIskBeforeDef := 1;
				end;
			end;
			If fIskBeforeDef = 1 then begin
				rWord := Copy(tWord,1, pSep - 1);
			end else begin
				rWord := DeclWord(Copy(tWord, 1, pSep - 1), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
			end;
			If pSep = pDef then begin
				rWord := rWord + '-';
				IsJob := 0;
			end else begin
				rWord := rWord + ' ';
			end;
			rWord := rWord + DeclWord(Copy(tWord, pSep + 1, Length(tWord)), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
      Result := rWord;
      Exit;
		end else if IsJob = 1 then begin
			// Ќе склон€ем оставшуюс€ часть составной должности, когда
			// обработали первое существительное
      Result := tWord;
      Exit;
		end;
	end else begin
		pSep := pDef;
		If pSpace <> 0 then begin
			If pSep = 0 then begin
				pSep := pSpace;
			end else begin
				pSep := Min(pSep, pSpace);
			end;
		end;
		If (pSep > 0) then begin
			// –екурсивный вызов склонени€ If есть '-' or ' '
			fIskBeforeDef := 0;
			If pSep = pDef then begin
			  If (ExceptList.GetValueByKey('Ќе—клон€етс€ѕередƒефисом') is TValueList)
				and (TValueList( ExceptList.GetValueByKey('Ќе—клон€етс€ѕередƒефисом')).FindKey(AnsiLowerCase(Copy(tWord,1, pSep - 1))) > 0) then begin
					fIskBeforeDef := 1;
				end;
			end;
			If fIskBeforeDef = 1 then begin
				rWord := Copy(tWord, 1, pSep - 1);
			end else begin
				rWord := DeclWord(Copy(tWord, 1, pSep - 1), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
			end;
      if pSep = pDef then begin
      	rWord := rWord + '-';
      end else begin
      	rWord := rWord + ' ';
      end;
			rWord := rWord + DeclWord(Copy(tWord, pSep + 1, Length(tWord)), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
      Result := rWord;
      Exit;
		end;
	end;

	// сокращени€ не склон€ем
	If Copy(tWord, Length(tWord)-1+1, 1) = '.' then begin
  	Result := tWord;
    Exit;
	end;

	// сокращени€ не склон€ем
	If Copy(tWord, Length(tWord)-1+1, 1) = '/' then begin
  	Result := tWord;
    Exit;
	end;

	// –азбиваем tWord содержащее точки на составл€ющие слова
	pPoint := Pos('.', tWord );
	If pPoint > 0 then begin
		// –екурсивный вызов склонени€ If есть '.'
		// точку не отсекаем - считаем, что tWord с точкой - сокращение
		rWord := DeclWord(Copy(tWord, 1, pPoint), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName)
			+ DeclWord(Copy(tWord, pPoint + 1, Length(tWord)), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
  	Result := rWord;
    Exit;
	end;

	// –азбиваем tWord содержащее / на составл€ющие слова
	pPoint := Pos('/', tWord);
	If pPoint > 0 then begin
		// –екурсивный вызов склонени€ If есть '/'
		// точку не отсекаем - считаем, что tWord с точкой - сокращение
		rWord := DeclWord(Copy(tWord, 1, pPoint), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName)
			+ DeclWord(Copy(tWord, pPoint + 1, Length(tWord)), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
  	Result := rWord;
    Exit;
	end;

	// –азбиваем tWord содержащее ) на составл€ющие слова
	pPoint := Pos(')', tWord);
	If (pPoint > 0) then begin
		// –екурсивный вызов склонени€ If есть ')'
		// точку не отсекаем - считаем, что tWord с точкой - сокращение
		rWord := DeclWord(Copy(tWord, 1, pPoint - 1), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName)
			+ ')'
			+ DeclWord(Copy(tWord, pPoint + 1, Length(tWord)), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
  	Result := rWord;
    Exit;
	end;

	// –азбиваем tWord содержащее ( на составл€ющие слова
	pPoint := Pos('(', tWord);
	If (pPoint > 0) then begin
		// –екурсивный вызов склонени€ If есть '('
		// точку не отсекаем - считаем, что tWord с точкой - сокращение
		rWord := DeclWord(Copy(tWord, 1, pPoint - 1), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName)
			+ '('
			+ DeclWord(Copy(tWord, pPoint + 1, Length(tWord)), Sex, IsJob, Pages, Country, FIO, PartOfSpeech, ExceptName);
  	Result := rWord;
    Exit;
	end;

	tWord := AnsiLowerCase(tWord);
	Sex := AnsiLowerCase(Sex);
	rWord := '';

	//—ообщить('ѕ.'+Pages+'. '+tWord+'. IsJob = '+IsJob);

	zWord := '';
	eWord := declWordEnds(tWord, zWord, Country);
	neWord := Length(eWord);

	eWord1 := '';
	eWord2 := '';
	If neWord > 0  then
  begin
		eWord1 := Copy(eWord, Length(eWord)-1+1, 1);
		If neWord > 1 then
    begin
			eWord2 := Copy(eWord, Length(eWord) - 1, 1);
		end;
	end;

	rWord := '';
	//If склЌайти¬»сключени€х(tWord, Country, ExceptName, PartOfSpeech, Pages, rWord) = 1 then begin
	//	// If находим tWord с заданным падежом в исключение€х - возвращаем
	//	//¬озврат (rWord);
	//end;

	If fNumberBeforeDef = 1 then begin
		// „ислительное вида 1-а, 2-а, 3-€
		PartOfSpeech := 'ѕ';
	end;

	// „ислительные
	If Pos(' ' + zWord + ' ', ' перш друг трет четверт п''€т шост сьом восьм дев''€т '+
	' дес€т одинадц€т дванадц€т тринадц€т чотирнадц€т п''€тнадц€т ш≥стнадц€т с≥мнадц€т в≥с≥мнадц€т дев''€тнадц€т '+
	' двадц€т тридц€т сороков п''€тидис€т шостидес€т сьомидес€т восьмидес€т '+
	' сот двухсот трьохсот чотирьохсот п''€тисот шостисот сьомисот восьмисот дев''€тисот '+
	' тис€чн ') > 0 then begin
		PartOfSpeech := 'ѕ';
	end;

	fNotDec := 0;
	If rWord = '' then begin
		If FIO = '‘' then begin
			If (Sex = 'ж') then begin
				If (eWord = '') or (eWord = 'о') then begin
					fNotDec := 1;
				end;
			end else if (Sex = 'м') then begin
				// For российских, но непон€тно как определить? ( елих, ѕелих) но (√ладких рус.)
				//If (eWord = <> '') and (Ќайти('ово ако их ', eWord+' ') then begin
				//	fNotDec = 1;
				//end;
			end;
		end;
		// »ностранного происхождени€ не склон€ютс€
		//+≥менники, що зак≥нчуютьс€ на -а, перед €ким виступаЇ голосний звук: амплуа, боа, Ќ≥карагуа;
		//+на -≥: кол≥бр≥, пар≥, пон≥, попур≥, ћар≥, √олсуорс≥,  апр≥, –осс≥н≥, ѕаган≥н≥, Ўелл≥;
		//+на -њ: ¬≥ньњ, Ўант≥льњ;
		//+на -у: какаду, кенгуру, рагу, Ѕаку, Ўоу;
		//+на -ю (-йу або -у): меню, ≥нтерв'ю, —ю;
		//-власн≥ назви з приголосним перед -а: ƒюма, ¬ольта;
		//+≥менники, що зак≥нчуютьс€ на -е (-Ї): кафе, кашне, турне, каре, п≥ке, протеже, Ѕеранже, √ейне, √ете, ƒанте; ательЇ, √отьЇ, ЋавуазьЇ;
		//-на -o: авто, бюро, депо, к≥но, манто, метро, рад≥о, јрно, Ѕуало, √юго, ƒ≥дро, Ћонгфелло, “юссо, √лазго (але вин€ток становить tWord пальто, €ке в≥дм≥нюЇтьс€ €к ≥менники ≤≤ в≥дм≥ни середнього роду на -о);
		//-пр≥звища на -€ (-йа або -а): √ой€, «ол€;
		//-ж≥ноч≥ ≥мена на приголосний, а також ж≥ноч≥ пр≥звища на -≥н, -ов: јл≥с, ƒолорес, «ейнаб; (≈льза) ¬≥рхов, (ƒжеральд≥на) „апл≥н;
		//-рос≥йськ≥ пр≥звища на -ово, -ако, -их: ќстрово, ѕлевако, √ладких.
		If (eWord1 = 'а') and (neWord > 1) then begin
			fNotDec := 1;
		end;
		If (Pos(eWord1, '≥њую') > 0) and (neWord > 0) then begin
			fNotDec := 1;
		end;
		If (Length(FIO) > 0) and (Pos(FIO, 'FIO') > 0) then begin
			If Pos(tWord, 'огли кизи ') > 0 then begin
				fNotDec := 1;
			end;
		end;
		If fNotDec = 0 then begin
		  If (ExceptList.GetValueByKey('Ќе—клон€етс€') is TValueList)
			and (TValueList( ExceptList.GetValueByKey('Ќе—клон€етс€')).FindKey(tWord) > 0) then begin
				fNotDec := 1;
			end;
		end;
		If fNotDec = 1 then begin
			rWord := tWord;
			//¬озврат rWord;
		end;
	end;
	fcWord1 := '';
	wfcWord := '';
	If Length(zWord) > 0 then begin
		fcWord1 := Copy(tWord, Length(zWord), 1);
		If Length(zWord) > 1 then begin
			wfcWord := Copy(zWord, 1, Length(zWord) - 1);
		end;
	end;
	fWord2 := '';
	If Length(wfcWord) > 1 then begin
		fWord2 := Copy(wfcWord, Length(wfcWord), 1);
	end;
	fGroup := 0;
	fTip := '';

	fWord_2 := fWord2 + fcWord1;

	fPrilag := 0;
	If PartOfSpeech = 'ѕ' then begin
		fPrilag := 1;
	end;
	If PartOfSpeech = '' then begin
	  If (ExceptList.GetValueByKey(' ак—уществительные') is TValueList)
		and (TValueList( ExceptList.GetValueByKey(' ак—уществительные')).FindKey(tWord) > 0) then begin
			PartOfSpeech := '—';
			//fCyshestv := 1;
			fPrilag := 0;
		end else
	  If (ExceptList.GetValueByKey(' акѕрилагательные') is TValueList)
		and (TValueList( ExceptList.GetValueByKey(' акѕрилагательные')).FindKey(tWord) > 0) then begin
			PartOfSpeech := 'ѕ';
			//fCyshestv := 0;
			fPrilag := 1;
		end;
	end;
  If (ExceptList.GetValueByKey('—редний–од') is TValueList)
	and (TValueList( ExceptList.GetValueByKey('—редний–од')).FindKey(tWord) > 0) then begin
		Sex := 'с';
	end;

	If ((FIO = '‘') or (FIO = 'ƒ') or (PartOfSpeech = 'ѕ')) and (PartOfSpeech <> '—') then begin
		If (Sex = 'м') then begin
			If fcWord1 = 'й' then begin
				If fWord2 = 'и' then begin
					fPrilag := 1;
					fTip := '“';
					If Length(zWord) >= 5 then begin
						If Copy(zWord, Length(zWord)-5+1, 5) = 'лиций' then begin
							fTip := 'Ћ';
						end;
					end;
				end else if fWord2 = '≥' then begin
					fPrilag := 1;
					fTip := 'ћ';
				end else if fWord2 = 'њ' then begin
					fPrilag := 1;
					fTip := '…';
				end;
				If fPrilag = 1 then begin
					zWord := Copy(zWord,1,  Length(zWord) - 2);
				end;
			end else if (nWord > 2)
			and (Pos(Copy(tWord, Length(tWord)-2+1, 2)+' ','ов ев Їв ≥в њв ий ≥н њн ') > 0 ) then begin
				fPrilag := 1;
				fTip := '3';

				// Ќе€сна зависимость подстановки 'о' or 'е' вместо '≥'
				//If (fWord2 = '≥')
				//и (Pages <> 1) then begin
				//	zWord = Ћев(zWord, —трƒлина(zWord) - 2) + 'о' + fcWord1;
				//end;
			end;
		end;
		If (Sex = 'ж') or (FIO = 'ƒ') then begin
			If (eWord1 = 'а')
			or (eWord1 = '€') then begin
				// ѕопробуем определить, относитс€ ли tWord к прилагательным to окончанию из 3 символов
				//
				// ѕоиск нужно осуществл€ть to трем последним буквам женских фамилий с окончанием на -а, -€
				// If не нашли - значит скорее всего существительное
				// If нашли то не факт что прилагательное, есть исключени€
				// гарантий нет, так как to окончанию определить часть речи невозможно
				f3EndSFioPril :=
				'ла€, на€, ра€, та€,'+
				'ава, ева, Їва, ≥ва, ова,'+
				'вга, лга,'+
				'бка, гка, дка, ика, цка, ька,'+
				'ала, ила, ≥ла, сла, ула,'+
				'ана, бна, дна, жна, зна, њна, йна, нна, пна, рна, сна, тна, чна, шна, ьна, €на, ≥на, ина,'+
				'дн€, жн€, тн€,'+
				'ата, ста,'+
				'дча,'+
				'';
				f2EndSFioPril :=
				'а€, ша, '+
				'';
				//If PartOfSpeech = '' then begin
				//	PartOfSpeech = '';
				//	If склЌайти¬»сключени€х(tWord, Country, ExceptName, PartOfSpeech) = 1 then begin
				//		If PartOfSpeech = 'ѕ' then begin
				//			fPrilag = 1;
				//		end else if PartOfSpeech = '—' then begin
				//			fPrilag = 0;
				//			fCyshestv = 1;
				//		end;
				//	end;
				//end;
				If PartOfSpeech = '' then begin
					If Pos(Copy(tWord, Length(tWord)-3+1, 3) + ',', f3EndSFioPril ) > 0 then begin
						fPrilag := 1;
					end else if Pos(Copy(tWord, Length(tWord)-2+1, 2), f2EndSFioPril) > 0 then begin
						fPrilag := 1;
					end;
				end;
			end;

			If fPrilag = 1 then begin
				If eWord1 = 'а' then begin
					Sex := 'ж';
					fTip := '“';
				end else if eWord1 = '€' then begin
					If declGlasnay(eWord2, Country) = 1 then begin
						Sex := 'ж';
						fTip := '…';
					end else begin
						Sex := 'ж';
						fTip := 'ћ';
						If Length(zWord) >= 3 then begin
							If Copy(zWord, Length(tWord)-3+1, 3) = 'лиц' then begin
								fTip := 'Ћ';
							end;
						end;
					end;
				end;
			end;
		end;
		If (Sex = 'с') or (FIO = 'ƒ') then begin
			If eWord1 = 'е' then begin
				Sex := 'с';
				fPrilag := 1;
				fTip := '“';
				If Length(zWord) >= 3 then begin
					If Copy(zWord, Length(tWord)-3+1, 3) = 'лиц' then begin
						fTip := 'Ћ';
					end;
				end;
			end else if eWord1 = 'Ї' then begin
				Sex := 'с';
				fPrilag := 1;
				If declGlasnay(eWord2, Country) = 1 then begin
					fTip := '…';
				end else begin
					fTip := 'ћ';
				end;
			end;
		end;
	end;

	If (fPrilag = 0) or (PartOfSpeech = '—') then begin
		// ќтмечаем что существительное обработали, чтобы не сколн€ть дальнейшую составную часть должности
		IsJob := 1;

		//+≥менники, що зак≥нчуютьс€ на -е (-Ї): кафе, кашне, турне, каре, п≥ке, протеже, Ѕеранже, √ейне, √ете, ƒанте; ательЇ, √отьЇ, ЋавуазьЇ;
		If (eWord1 = 'е')
		or (eWord1 = 'Ї') then begin
			//fNotDec := 1;
			rWord := tWord;
		end;
	end;
	If rWord <> '' then begin
    Result := declReturnReg(rWord, AWord);
    Exit;
	end;

	If fPrilag = 1 then begin
		// ѕрилагательное
		If Sex = 'м' then begin
			// мужского рода
			If fTip = 'ћ' then begin
				// ≥й
				If Pages = 1 then begin
					rWord := zWord + '≥й';
				end else if Pages = 2 then begin
					rWord := zWord + 'ього';
				end else if Pages = 3 then begin
					rWord := zWord + 'ьому';
				end else if Pages = 4 then begin
					rWord := zWord + 'ого'; // (-≥й) любое
				end else if Pages = 5 then begin
					rWord := zWord + '≥м';
				end else if Pages = 6 then begin
					rWord := zWord + 'ьому'; // (-≥м) любое
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = '“' then begin
				// -ий
				If Pages = 1 then begin
					rWord := zWord + 'ий';
				end else if Pages = 2 then begin
					rWord := zWord + 'ого';
				end else if Pages = 3 then begin
					rWord := zWord + 'ому';
				end else if Pages = 4 then begin
					rWord := zWord + 'ого';
				end else if Pages = 5 then begin
					rWord := zWord + 'им';
				end else if Pages = 6 then begin
					rWord := zWord + 'ому';
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = '…' then begin
				// -њй
				If Pages = 1 then begin
					rWord := zWord + 'њй';
				end else if Pages = 2 then begin
					rWord := zWord + 'його';
				end else if Pages = 3 then begin
					rWord := zWord + 'йому';
				end else if Pages = 4 then begin
					rWord := zWord + 'його'; // (-њй)
				end else if Pages = 5 then begin
					rWord := zWord + 'њм';
				end else if Pages = 6 then begin
					rWord := zWord + 'йому'; // (-њм)
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = 'Ћ' then begin
				// -лиций
				If Pages = 1 then begin
					rWord := zWord + 'ий';
				end else if Pages = 2 then begin
					rWord := zWord + 'ього';
				end else if Pages = 3 then begin
					rWord := zWord + 'ьому';
				end else if Pages = 4 then begin
					rWord := zWord + 'ього'; // (-им)
				end else if Pages = 5 then begin
					rWord := zWord + 'им';
				end else if Pages = 6 then begin
					rWord := zWord + 'ьому';
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = '3' then begin
				// -ов ев Їв ≥в њв ий ≥н њн
				If Pages = 1 then begin
					rWord := zWord;
				end else if Pages = 2 then begin
					rWord := zWord + 'а';
				end else if Pages = 3 then begin
					rWord := zWord + 'у';
				end else if Pages = 4 then begin
					rWord := zWord + 'а';
				end else if Pages = 5 then begin
					rWord := zWord + 'им';
				end else if Pages = 6 then begin
					rWord := zWord + '≥';
				end else if Pages = 7 then begin
					rWord := zWord + 'е'; // or не склон€ем
				end;
			end;
		end else if Sex = 'ж' then begin
			// женского
			If (fTip = 'ћ') or (fTip = 'Ћ') then begin
				// -€
				If Pages = 1 then begin
					rWord := zWord + '€';
				end else if Pages = 2 then begin
					rWord := zWord + 'ьоњ';
				end else if Pages = 3 then begin
					rWord := zWord + '≥й';
				end else if Pages = 4 then begin
					rWord := zWord + 'ю';
				end else if Pages = 5 then begin
					rWord := zWord + 'ьою';
				end else if Pages = 6 then begin
					rWord := zWord + '≥й';
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = '“' then begin
				// -а
				If Pages = 1 then begin
					rWord := zWord + 'а';
				end else if Pages = 2 then begin
					rWord := zWord + 'оњ';
				end else if Pages = 3 then begin
					rWord := zWord + '≥й';
				end else if Pages = 4 then begin
					rWord := zWord + 'у';
				end else if Pages = 5 then begin
					rWord := zWord + 'ою';
				end else if Pages = 6 then begin
					rWord := zWord + '≥й';
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = '…' then begin
				// -а€
				If Pages = 1 then begin
					rWord := zWord + '€';
				end else if Pages = 2 then begin
					rWord := zWord + 'йоњ';
				end else if Pages = 3 then begin
					rWord := zWord + 'њй';
				end else if Pages = 4 then begin
					rWord := zWord + 'ю';
				end else if Pages = 5 then begin
					rWord := zWord + 'йою';
				end else if Pages = 6 then begin
					rWord := zWord + 'њй';
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end;
		end else if Sex = 'с' then begin
			// среднего рода
			If fTip = 'ћ' then begin
				// -Ї
				If Pages = 1 then begin
					rWord := zWord + 'Ї';
				end else if Pages = 2 then begin
					rWord := zWord + 'ього';
				end else if Pages = 3 then begin
					rWord := zWord + 'ьому';
				end else if Pages = 4 then begin
					rWord := zWord + 'Ї';
				end else if Pages = 5 then begin
					rWord := zWord + '≥м';
				end else if Pages = 6 then begin
					rWord := zWord + 'ьому'; // (-≥м) любое
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = '“' then begin
				// -е
				If Pages = 1 then begin
					rWord := zWord + 'е';
				end else if Pages = 2 then begin
					rWord := zWord + 'ого';
				end else if Pages = 3 then begin
					rWord := zWord + 'ому';
				end else if Pages = 4 then begin
					rWord := zWord + 'е';
				end else if Pages = 5 then begin
					rWord := zWord + 'им';
				end else if Pages = 6 then begin
					rWord := zWord + 'ому';
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = '…' then begin
				// -аЇ
				If Pages = 1 then begin
					rWord := zWord + 'Ї';
				end else if Pages = 2 then begin
					rWord := zWord + 'його';
				end else if Pages = 3 then begin
					rWord := zWord + 'йому';
				end else if Pages = 4 then begin
					rWord := zWord + 'Ї';
				end else if Pages = 5 then begin
					rWord := zWord + 'њм';
				end else if Pages = 6 then begin
					rWord := zWord + 'йому'; // (-њм) любое
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end else if fTip = 'Ћ' then begin
				// -лице
				If Pages = 1 then begin
					rWord := zWord + 'е';
				end else if Pages = 2 then begin
					rWord := zWord + 'ього';
				end else if Pages = 3 then begin
					rWord := zWord + 'ьому';
				end else if Pages = 4 then begin
					rWord := zWord + 'е';
				end else if Pages = 5 then begin
					rWord := zWord + 'им';
				end else if Pages = 6 then begin
					rWord := zWord + 'ьому';
				end else if Pages = 7 then begin
					rWord := tWord; // не склон€ем
				end;
			end;
		end;

		//—ообщить(''+tWord+'. √руппа: ѕрилагательное. fTip: '+fTip);

	end else if declGetGroupAndTyp(tWord, fGroup, fTip, eWord, neWord, eWord1, fcWord1, Sex, Country) = 0 then begin
		//¬озврат '';
		// Ќе склон€ем, If не можем определить to правилам
		rWord := tWord;

	//end else if склЌайти¬»сключени€х(tWord, Country, ExceptName) = 1 then begin

		// Ќе склон€ем, If в исключени€х
	//	rWord = tWord;

	end else begin
		// —уществительное

		//—ообщить(''+tWord+'. √руппа: '+fGroup+'. fTip: '+fTip);

		If neWord > 1 then begin
			// ѕоправочка, не все eWord убираем, а только последнюю букву
			eWord_u := Copy(eWord, 1, Length(eWord) - 1);
			zWord := zWord + eWord_u;
		end;

		If fGroup = 1 then begin
			// 1-а€ группа
			//
			//1.”крањнськ≥ чолов≥ч≥ та ж≥ноч≥ ≥мена, що в називному в≥дм≥нку
			//	однини зак≥нчуютьс€ на -а (-€), в≥дм≥нютьс€ €к в≥дпов≥дн≥
			//	≥менники ≤ в≥дм≥ни.
			//ѕрим≥тка 1.  ≥нцев≥ приголосн≥ основи г, к, х у ж≥ночих ≥менах
			//						у давальному та м≥сцевому в≥дм≥нках однини перед
			//						зак≥нченн€м -≥ зм≥нюютьс€ на з, ц, с:
			//						ќльга - ќльз≥, ѕалажка - ѕалажц≥, —олоха - —олос≥.
			//ѕрим≥тка 2. ” ж≥ночих ≥менах типу ќдарка, ѕараска в родовому
			//						в≥дм≥нку множини в к≥нц≥ основи м≥ж приголосними
			//						з'€вл€Їтьс€ звук о: ќдарок, ѕарасок.
			//

			If fTip = '“' then begin
				// тверда€
				If (Sex = 'ж') or (FIO = 'ƒ') then begin
			    If (Pages = 3)
					or (Pages = 6) then begin
						If fcWord1 = 'г' then begin
							zWord := wfcWord + 'з';
						end else if fcWord1 = 'к' then begin
							zWord := wfcWord + 'ц';
						end else if fcWord1 = 'х' then begin
							zWord := wfcWord + 'с';
						end;
					end;
				end;
				If Pages = 1 then begin
					rWord := zWord + 'а';
				end else if Pages = 2 then begin
					rWord := zWord + 'и';
				end else if Pages = 3 then begin
					rWord := zWord + '≥';
				end else if Pages = 4 then begin
					rWord := zWord + 'у';
				end else if Pages = 5 then begin
					rWord := zWord + 'ою';
				end else if Pages = 6 then begin
					rWord := zWord + '≥';
				end else if Pages = 7 then begin
					rWord := zWord + 'о';
				end;
			end else if fTip = 'ћ' then begin
				fAddZvuch := 0;
				If (fcWord1 = 'й') then begin
					fAddZvuch := 1;
				end;
				// м€гка€
				If Pages = 1 then begin
					rWord := zWord + '€';
				end else if Pages = 2 then begin
					If (declGlasnay(eWord2, Country) = 1)
					or (fAddZvuch = 1) then begin
						rWord := zWord + 'њ';
					end else begin
						rWord := zWord + '≥';
					end;
				end else if Pages = 3 then begin
					If (declGlasnay(eWord2, Country) = 1)
					or (fAddZvuch = 1) then begin
						rWord := zWord + 'њ';
					end else begin
						rWord := zWord + '≥';
					end;
				end else if Pages = 4 then begin
					rWord := zWord + 'ю';
				end else if Pages = 5 then begin
					If (declGlasnay(eWord2, Country) = 1)
					or (fAddZvuch = 1) then begin
						rWord := zWord + 'Їю';
					end else begin
						rWord := zWord + 'ею';
					end;
				end else if Pages = 6 then begin
					If (declGlasnay(eWord2, Country) = 1)
					or (fAddZvuch = 1) then begin
						rWord := zWord + 'њ';
					end else begin
						rWord := zWord + '≥';
					end;
				end else if Pages = 7 then begin
					If Sex = 'м' then begin
						rWord := zWord + 'Ї'; // ≤лле (в книжке), ≤ллЇ (в ворде)
					end else begin
						If (declGlasnay(eWord2, Country) = 1)
						//or (fAddZvuch = 1)
						then begin
							rWord := zWord + 'Ї';
						end else begin
							rWord := zWord + 'ю';
						end;
					end;
				end;
			end else if fTip = '—' then begin
				// смешанна€
				If Pages = 1 then begin
					rWord := zWord + 'а';
				end else if Pages = 2 then begin
					rWord := zWord + '≥';
				end else if Pages = 3 then begin
					rWord := zWord + '≥';
				end else if Pages = 4 then begin
					rWord := zWord + 'у';
				end else if Pages = 5 then begin
					rWord := zWord + 'ею';
				end else if Pages = 6 then begin
					rWord := zWord + '≥';
				end else if Pages = 7 then begin
					rWord := zWord + 'е';
				end;
			end;
		end else if fGroup = 2 then begin
			// 2-а€ группа

			//2. ”крањнськ≥ чолов≥ч≥ ≥мена, що в називному в≥дм≥нку однини зак≥нчуютьс€
			//	 на приголосний та -о , в≥дм≥нюютьс€ €к в≥дпов≥дн≥ ≥менники ≤≤ в≥дм≥ни.
			//ѕрим≥тка 1. ¬ ≥менах типу јнт≥н, Ќест≥р, Ќечип≥р, ѕрок≥п, —ид≥р, “им≥ш,
			//						‘ед≥р голосний ≥ виступаЇ т≥льки в називному в≥дм≥нку,
			//						у непр€мих - о: јнтона, јнтонов≥, Ќестора, Ќесторов≥ й т.д.,
			//						але: Ћавр≥н - Ћавр≥на, ќлеф≥р - ќлеф≥ра.
			//ѕрим≥тка 2. ≤мена, що в називному в≥дм≥нку зак≥нчуютьс€ на -р, у родовому
			//						мають зак≥нченн€ -а: ¬≥ктор - ¬≥ктора, ћакар - ћакара,
			//						але: ≤гор - ≤гор€, Ћазар - Ћазар€.
			//ѕрим≥тка 3. ≤м'€ Ћев при в≥дм≥нюванн≥ маЇ паралельн≥ форми: Ћева й Ћьва, Ћевов≥ й Ћьвов≥ та ≥н.

			// „ередование... ¬озможно For имен не чередуетс€?... ќлег - ћ. ќлегов≥
			//If (FIO <> '') and (Ќайти('FIO', FIO) = 0) then begin
			//	// в FIO не чередуютс€
		  //  If (Pages = 3)
		  //  or (Pages = 6) then begin
			//		If Ќайти('олег ', tWord+' ') = 0 then begin
			//			If fcWord1 = 'г' then begin
			//				zWord = wfcWord + 'з';
			//			end else if fcWord1 = 'к' then begin
			//				zWord = wfcWord + 'ц';
			//			end else if fcWord1 = 'х' then begin
			//				zWord = wfcWord + 'с';
			//			end;
			//		end;
			//	end;
			//end;

			fAddZvuch_b := 0;
			If (fcWord1 = 'ь') then begin
				// (¬асиль - в типе '—')
				zWord := Copy(zWord, 1, Length(zWord) - 1);
				eWord := 'ь';
				fAddZvuch_b := 1;
			end;

			fAddZvuch := 0;
			If (fcWord1 = 'й')
			and (fTip = 'ћ') then begin
				// -≥й (—ерг≥й)
				zWord := Copy(zWord, 1, Length(zWord) - 1);
				eWord := 'й';
				fAddZvuch := 1;
			end else if (fWord2 = '≥') and (FIO = '»') then begin
				// ѕроверка на исключени€
				If Pages <> 1 then begin
				  If (ExceptList.GetValueByKey('Ќет„ередовани€»ќ') is TValueList)
					and (TValueList( ExceptList.GetValueByKey('Ќет„ередовани€»ќ')).FindKey(tWord) = 0)
					//Ќайти('лавр≥н олеф≥р леон≥д ', tWord+' ') = 0
					then begin
						If ((Pages = 3) or (Pages = 6)) and (Pos(tWord+' ', '€к≥в ' ) > 0) then begin
							// €кобов≥
							fcWord1 := 'б';
						end;
						zWord := Copy(wfcWord, 1, Length(wfcWord) - 1) + 'о' + fcWord1;
					end;
				end;
			end else if Copy(tWord, length(tWord)-3+1, 3) = 'ець' then begin
				If Copy(tWord, length(tWord)-5+1, 5) = 'швець' then begin
					// Ўвець - Ўевц€
          if Pages = 7 then begin
  					zWord := Copy(tWord, 1, nWord - 5) + 'шевч';
          end else begin
  					zWord := Copy(tWord, 1, nWord - 5) + 'шевц';
          end;
  			end else begin
					// ћарганець - ћарганц€
					//zWord := Ћев(wfcWord, —трƒлина(wfcWord) - 2) + fWord2;
          if Pages = 7 then begin
            zWord := Copy(wfcWord, 1, Length(wfcWord) - 2) + 'ч';
//            zWord := Ћев(tWord, nWord - 3) + 'ч';
          end else begin
            zWord := Copy(wfcWord, 1, Length(wfcWord) - 2) + 'ц';
            //zWord := Ћев(tWord, nWord - 3) + 'ц';
          end;
				end;
			end;

			If fTip = '“' then begin
				If Pages = 1 then begin
					rWord := zWord + eWord;
				end else if Pages = 2 then begin
				  If (ExceptList.GetValueByKey('–одительныйѕадеж2ого—клонени€ќкончание”ё') is TValueList)
					and (TValueList( ExceptList.GetValueByKey('–одительныйѕадеж2ого—клонени€ќкончание”ё')).FindKey(tWord) > 0) then begin
						rWord := zWord + 'у';
					end else begin
						rWord := zWord + 'а';
					end;
				end else if Pages = 3 then begin
					//If FIO = 'ƒ' then begin
						rWord := zWord + 'у'; //(-у) можно любое
					//end else begin
					//	rWord = zWord + 'ов≥'; //(-у) можно любое
					//end;
				end else if Pages = 4 then begin
					rWord := zWord + 'а';
				end else if Pages = 5 then begin
					rWord := zWord + 'ом';
				end else if Pages = 6 then begin
					rWord := zWord + 'ов≥';
				end else if Pages = 7 then begin
          // ≥в (-њв), -ов -ев (-Їв), -ин, -≥н (-њн) == -e / -
          If Pos(Copy(tWord, Length(tWord)-2+1, 2) + ' ','≥в њв ов ев Їв ин ≥н њн ' ) > 0 then begin
            rWord := zWord + 'е';
          end else begin
            rWord := zWord + 'у';
          end;
//					If Ќайти('олег ', tWord+' ') > 0 then begin
//						rWord := zWord + 'у';
//					end else begin
//						rWord := zWord + 'е'; //(-у) можно только одно, зависимость не€сна
//					end;
				end;
			end else if (fTip = 'ћ') or (fTip = '—') then begin
				If Pages = 1 then begin
					rWord := zWord + eWord;
				end else if Pages = 2 then begin
					If ((fcWord1 = 'р') and (
		  		(ExceptList.GetValueByKey('ћ€гка€–') is TValueList)
					and (TValueList( ExceptList.GetValueByKey('ћ€гка€–')).FindKey(tWord) = 0)
					//Ќайти('≥гор лазар секретар ', tWord+' ') = 0
					))
					or (declShupashay(fcWord1, Country) = 1) then begin
		  			If (ExceptList.GetValueByKey('–одительныйѕадеж2ого—клонени€ќкончание”ё') is TValueList)
						and (TValueList( ExceptList.GetValueByKey('–одительныйѕадеж2ого—клонени€ќкончание”ё')).FindKey(tWord) > 0) then begin
							rWord := zWord + 'у';
						end else begin
							rWord := zWord + 'а';
						end;
					end else begin
		  			If (ExceptList.GetValueByKey('–одительныйѕадеж2ого—клонени€ќкончание”ё') is TValueList)
						and (TValueList( ExceptList.GetValueByKey('–одительныйѕадеж2ого—клонени€ќкончание”ё')).FindKey(tWord) > 0) then begin
							rWord := zWord + 'ю';
						end else begin
							rWord := zWord + '€';
						end;
					end;
				end else if Pages = 3 then begin
					If (fAddZvuch = 1) or (fAddZvuch_b = 1) then begin
						//If FIO = 'ƒ' then begin
							rWord := zWord + 'ю';
						//end else begin
						//	rWord = zWord + 'Їв≥'; //(-ю) можно любое
						//end;
					end else begin
						//If FIO = 'ƒ' then begin
						If fTip = 'ћ' then begin
							rWord := zWord + 'ю';
						end else if fTip = '—' then begin
							rWord := zWord + 'у';
						end;
						//end else begin
						//	rWord = zWord + 'ев≥'; //(-ю) можно любое
						//end;
					end;
				end else if Pages = 4 then begin
					If ((fcWord1 = 'р') and (
				  (ExceptList.GetValueByKey('ћ€гка€–') is TValueList)
					and (TValueList(  ExceptList.GetValueByKey('ћ€гка€–')).FindKey(tWord) = 0)
					//Ќайти('≥гор лазар секретар ', tWord+' ') = 0
					))
					or (declShupashay(fcWord1, Country) = 1) then begin
						rWord := zWord + 'а';
					end else begin
						rWord := zWord + '€';
					end;
				end else if Pages = 5 then begin
					If fAddZvuch = 1 then begin
						rWord := zWord + 'Їм';
					end else begin
						rWord := zWord + 'ем';
					end;
				end else if Pages = 6 then begin
					If fAddZvuch = 1 then begin
						rWord := zWord + 'Їв≥';
					end else begin
						rWord := zWord + 'ев≥';
					end;
				end else if Pages = 7 then begin
//          If ((fcWord1 = 'р') and (
//				  (сп»сключени€.ѕолучить('ћ€гка€–') is —писок«начений)
//					and (—писок«начений( сп»сключени€.ѕолучить('ћ€гка€–')).Ќайти«начение(tWord) = 0)
//					//Ќайти('≥гор лазар секретар ', tWord+' ') = 0
//					))
//					or (склЎип€ща€(fcWord1, Country) = 1) then begin
          If (declShupashay(fcWord1, Country) = 1) then begin
            rWord := zWord + 'е';
          end else if (fTip = 'ћ') and (Copy(tWord, Length(tWord)-3+1, 3) = 'ець') then begin
            rWord := zWord + 'е';
					end else if (fAddZvuch = 1) or (fAddZvuch_b = 1) then begin
						rWord := zWord + 'ю';
					end else begin
						rWord := zWord + 'у';
          end;

//					If (склЎип€ща€(fcWord1, Country) = 1) then begin
//						rWord := zWord + 'у';
//					end else if (fAddZvuch = 1) or (fAddZvuch_b = 1) then begin
//						rWord := zWord + 'ю';
//					end else begin
//						rWord := zWord + 'е'; //(-ю) можно только одно, зависимость частично €сна
//					end;
				end;
			end;
		end else if fGroup = 3 then begin
			// 3-ть€ группа
			If (fcWord1 = 'ь') then begin
				// (Ќ≥нель)
				zWord := Copy(zWord,1, Length(zWord) - 1);
				eWord := 'ь';

				fcWord1 := '';
				wfcWord := '';
				If Length(zWord) > 0 then begin
					fcWord1 := Copy(tWord, Length(zWord), 1);
					If Length(zWord) > 1 then begin
						wfcWord := Copy(zWord, 1, Length(zWord) - 1);
					end;
				end;

				fWord2 := '';
				If Length(wfcWord) > 1 then begin
					fWord2 := Copy(wfcWord, Length(wfcWord), 1);
				end;
			end;
			// „ередование -≥- -о-
			// не€сна зависимоть.

			If tWord = 'мати' then begin
				If Pages = 1 then begin
					rWord := 'мати';
				end else if Pages = 2 then begin
					rWord := 'матер≥';
				end else if Pages = 3 then begin
					rWord := 'матер≥';
				end else if Pages = 4 then begin
					rWord := 'мат≥р';
				end else if Pages = 5 then begin
					rWord := 'мат≥рю';
				end else if Pages = 6 then begin
					rWord := 'матер≥';
				end else if Pages = 7 then begin
					rWord := 'мати';
				end;
			end else begin
				If Pages = 1 then begin
					rWord := zWord + eWord;
				end else if Pages = 2 then begin
					rWord := zWord + '≥';
				end else if Pages = 3 then begin
					rWord := zWord + '≥';
				end else if Pages = 4 then begin
					rWord := zWord + eWord;
				end else if Pages = 5 then begin
					// €кщо основа ≥менника зак≥нчуЇтьс€ одним приголосним (кр≥м губного та р),
					// то п≥сл€ голосного перед зак≥нченн€м цей приголосний подовжуЇтьс€
					// (на письм≥ подвоюЇтьс€): височ≥нн-ю, в≥ссю , в'€ззю, м≥ддю;
					// €кщо основа ≥менника зак≥нчуЇтьс€ сполученн€м приголосних або на губний
					// (б, п, в, м, ф), а також на р, щ, то подовженн€ не в≥дбуваЇтьс€:
					// верф'ю, в≥сс-ю, мат≥р-ю, рад≥ст-ю.

					If (Pos(fcWord1, 'мвбпфр') = 0)
					and (declGlasnay(fWord2, Country) = 1) then begin
						zWord := zWord + fcWord1;
					end else if fTip = '“' then begin
						// For изначально твердых окончаний основ - добавл€етс€ апостроф (Ћюбов'ю)
						zWord := zWord + '''';
					end;

					rWord := zWord + 'ю';
				end else if Pages = 6 then begin
					rWord := zWord + '≥';
				end else if Pages = 7 then begin
					rWord := zWord + 'е';
				end;
			end;

		end;

	end;

	//—ообщить('ѕ.'+Pages+'. '+tWord+'. IsJob = '+IsJob+'. rWord: '+rWord);

  Result := declReturnReg(rWord, AWord);
end;

function WordToList(Value : String): TValueList;
var i, k, n : Integer;
    s: String;
begin
	Result := TValueList.Create;
	i := 1;
	n := Length(Value);
	for k := 1 to n do
  begin
		if Pos(Value[i], ' -.,/()?[]') > 0 then
    begin
			if k - 1 > i + 1 then
      begin
				s := Copy(Value, i, k - i);
				Result.Add(s);
				i := k + 1;
			end;
		end;
	end;
	If n - 1 > i + 1 then
  begin
		s := Copy(Value, i, n - i + 1);
		Result.Add(Value);
	end;
end;

function ToJob(Job, Dept, Sex: String; Pages: Byte = 2; Country: String = 'UA'): String;
var
	tSex,
  tJob,
  tDept,
  tDept1,
  l_t_Dept,
  tJob2,
  tJob5,
  tWord,
  FWDept: String;
  PagesDept,
  w_s_Job: Byte;
  wJobList,
  wJobList2,
  wJobList5: TValueList;
  k,
  pSpace: Integer;
begin
	//If (Sex <> 'м') and (Sex <> 'ж') then begin
		tSex := 'м';
	//end;

  w_s_Job := 0;

	tJob := DeclWord(Job, tSex, w_s_Job, Pages, Country, 'ƒ');
	If Trim(tJob) <> '' then begin
		PagesDept := 2;
	end else begin
		PagesDept := Pages;
	end;
  w_s_Job := 0;
	tDept := DeclWord(Dept, tSex, w_s_Job, PagesDept, Country, 'ƒ');
  w_s_Job := 0;
	tDept1 := DeclWord(Dept, tSex, w_s_Job, 5, Country, 'ƒ');

	// ѕопробуем убрать лишние слова при родительном падеже отдела
	l_t_Dept := AnsiLowerCase(tDept);
	tJob2 := tJob;
	wJobList := WordToList(tJob2);
	For k := 0 to wJobList.Count - 1 do
  begin
		tWord := wJobList.Strings[k];
		if Pos(tWord + ' ', l_t_Dept) > 0 then
    begin
			tJob2 := StringReplace(tJob2, tWord + ' ', '',[rfReplaceAll]);
		end
    else if Pos(' ' + tWord, l_t_Dept) > 0 then
    begin
			tJob2 := StringReplace(tJob2, ' ' + tWord, '',[rfReplaceAll]);
		end;
	end;

	// ѕри творительном падеже отдела
	l_t_Dept := AnsiLowerCase(tDept1);
	tJob5 := tJob;
	wJobList := WordToList(tJob5);
	for k := 0 to wJobList.Count-1 do
  begin
		tWord := wJobList.Strings[k];
		if Pos(tWord + ' ', tDept1) > 0 then
    begin
			tJob5 := StringReplace(tJob5, tWord+' ', '', [rfReplaceAll]);
		end
    else if Pos(' ' + tWord, tDept1) > 0 then
    begin
			tJob5 := StringReplace(tJob5, ' ' + tWord, '', [rfReplaceAll]);
		end;
	end;

	// ќставим вариант с меньшим числом слов должности
	wJobList2 := WordToList(tJob2);
	wJobList5 := WordToList(tJob5);
	If wJobList2.Count <= wJobList5.Count then
  begin
		tJob := tJob2;
	end
  else begin
		tJob := tJob5;
		tDept := tDept1;
	end;

	pSpace := Pos(' ', Dept);
	If pSpace = 0 then begin
		FWDept := Dept;
	end else begin
		FWDept := Copy(Dept, 1, pSpace - 1);
	end;

  if ExceptList.GetValueByKey('Ќижний–егистрѕервое—ловоќтдела') is TValueList then begin
    if TValueList(ExceptList.GetValueByKey('Ќижний–егистрѕервое—ловоќтдела')).FindKey(AnsiLowerCase(FWDept)) > 0 then
    begin
      if AnsiUpperCase(Dept) <> Dept then
      begin
        // ≈сли не все капитализированные, тогда ставим нижний регистр дл€ первого символа
        tDept := AnsiUpperCase(Copy(tDept, 1,1)) + Copy(tDept, 2, 255);
      end;
    end;
  end;

	Result := '';
	If tJob <> '' then
  begin
		Result := Result + tJob;
	end;
	If tDept <> '' then
  begin
		If Result <> '' then
    begin
			Result := Result + ' ';
		end;
		Result := Result + tDept;
	end;
end;

procedure LoadExceptList;
var s : string;
begin
  ValueListUnit.FreeExceptList(ExceptList);
  ExceptList := nil;
  s := ExtractFilePath(Application.ExeName) +'MainUA.dic';
  ExceptList := ValueListUnit.LoadExceptList(s);
end;

end.
